// Generated by view binder compiler. Do not edit!
package com.example.uartek.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.uartek.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button button9;

  @NonNull
  public final Button changePassword;

  @NonNull
  public final Button changeQuestionNumber;

  @NonNull
  public final TextView mail;

  @NonNull
  public final TextView questionNumber;

  @NonNull
  public final EditText questionNumberEntry;

  @NonNull
  public final Button signout;

  private ActivitySettingsBinding(@NonNull ConstraintLayout rootView, @NonNull Button button9,
      @NonNull Button changePassword, @NonNull Button changeQuestionNumber, @NonNull TextView mail,
      @NonNull TextView questionNumber, @NonNull EditText questionNumberEntry,
      @NonNull Button signout) {
    this.rootView = rootView;
    this.button9 = button9;
    this.changePassword = changePassword;
    this.changeQuestionNumber = changeQuestionNumber;
    this.mail = mail;
    this.questionNumber = questionNumber;
    this.questionNumberEntry = questionNumberEntry;
    this.signout = signout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button9;
      Button button9 = ViewBindings.findChildViewById(rootView, id);
      if (button9 == null) {
        break missingId;
      }

      id = R.id.change_password;
      Button changePassword = ViewBindings.findChildViewById(rootView, id);
      if (changePassword == null) {
        break missingId;
      }

      id = R.id.change_question_number;
      Button changeQuestionNumber = ViewBindings.findChildViewById(rootView, id);
      if (changeQuestionNumber == null) {
        break missingId;
      }

      id = R.id.mail;
      TextView mail = ViewBindings.findChildViewById(rootView, id);
      if (mail == null) {
        break missingId;
      }

      id = R.id.question_number;
      TextView questionNumber = ViewBindings.findChildViewById(rootView, id);
      if (questionNumber == null) {
        break missingId;
      }

      id = R.id.question_number_entry;
      EditText questionNumberEntry = ViewBindings.findChildViewById(rootView, id);
      if (questionNumberEntry == null) {
        break missingId;
      }

      id = R.id.signout;
      Button signout = ViewBindings.findChildViewById(rootView, id);
      if (signout == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((ConstraintLayout) rootView, button9, changePassword,
          changeQuestionNumber, mail, questionNumber, questionNumberEntry, signout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
